version: '3.8'

name: mongo-sharding

services:
  configSrv:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv
    restart: always
    ports:
    - "27017:27017"
    networks:
      mongo-network:
        ipv4_address: 173.17.0.10
    volumes:
    - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1
    restart: always
    ports:
    - "27018:27018"
    networks:
      mongo-network:
        ipv4_address: 173.17.0.9
    volumes:
    - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2
    restart: always
    ports:
    - "27019:27019"
    networks:
      mongo-network:
        ipv4_address: 173.17.0.8
    volumes:
    - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--port", "27019", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongos_router
    restart: always
    ports:
    - "27020:27020"
    networks:
      mongo-network:
        ipv4_address: 173.17.0.7
    depends_on:
    - configSrv
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--port", "27020", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    depends_on:
      mongos_router:
        condition: service_healthy
    ports:
    - 8080:8080
    networks:
      mongo-network:
        ipv4_address: 173.17.0.50
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020/somedb"
      MONGODB_DATABASE_NAME: "somedb"
      MONGODB_COLLECTION_NAME: "helloDoc"

networks:
  mongo-network:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1-data:
  shard2-data: